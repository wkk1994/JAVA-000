spring:
  shardingsphere:
    datasource:
      common:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
      names: db0,db1
      db0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/test0?characterEncoding=UTF-8&useSSL=false
        username: root
        password: root!@#
      db1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/test1?characterEncoding=UTF-8&useSSL=false
        username: root
        password: root!@#
    rules:
      sharding:
        tables:
          order_info:
            logic-table: order_info
            actual-data-nodes: db$->{0..1}.order_info$->{0..15}
            database-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: order-info-db-algorith
            table-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: order-info-tb-algorith
            key-generate-strategy:
              column: id
              ke-generator-name: snowflake
        sharding-algorithms:
          order-info-db-algorith:
            type: INLINE
            props:
              algorithm-expression: db$->{(user_id/16).intValue()%2}
          order-info-tb-algorith:
            type: INLINE
            props:
              algorithm-expression: order_info$->{user_id % 16}
        key-generators:
          snowflake:
            type: SNOWFLAKE
            props:
              worker-id: 123
